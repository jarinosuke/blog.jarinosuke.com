---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'] & { readingTime?: string };

const { title, description, datetime, modDatetime, ogImage, tags, readingTime } = Astro.props;
---

<html lang="ja">
	<head>
		<BaseHead title={title} description={description} />
	</head>

	<body>
		<Header />
		<main class="mx-auto max-w-3xl px-4">
			<article>
				{ogImage && (
					<div class="mb-8">
						{typeof ogImage === 'string' ? (
							<img 
								width={1020} 
								height={510} 
								src={ogImage} 
								alt="" 
								class="w-full rounded-lg"
							/>
						) : (
							<Image 
								width={1020} 
								height={510} 
								src={ogImage} 
								alt="" 
								class="w-full rounded-lg"
							/>
						)}
					</div>
				)}
				
				<header class="mb-12">
					<h1 class="text-4xl font-bold text-skin-base mb-6 leading-tight">
						{title}
					</h1>
					
					<div class="flex items-center gap-3 text-sm text-skin-base/60 mb-6">
						<FormattedDate date={datetime} />
						<span>•</span>
						<span>{readingTime || '1 min read'}</span>
					</div>
					
					{modDatetime && (
						<div class="text-sm text-skin-base/60 italic mb-6">
							Last updated on <FormattedDate date={modDatetime} />
						</div>
					)}
					
					<div class="w-24 h-px bg-skin-line/30"></div>
				</header>
				
				<div class="prose prose-lg max-w-none text-skin-base">
					<slot />
				</div>
				
				{tags && tags.length > 0 && (
					<footer class="mt-12 pt-8 border-t border-skin-line/20">
						<div class="flex flex-col gap-4">
							<h3 class="text-lg font-semibold text-skin-base">関連タグ</h3>
							<div class="flex flex-wrap gap-3">
								{tags.map((tag) => (
									<a 
										href={`/tags/${tag}/`}
										class="inline-flex items-center text-sm text-skin-base bg-skin-card/50 hover:bg-skin-card hover:text-skin-accent px-4 py-2 rounded-lg border border-skin-line/20 hover:border-skin-accent/30 transition-colors"
									>
										<span class="mr-1">#</span>
										{tag}
									</a>
								))}
							</div>
							<p class="text-sm text-skin-base/60 mt-2">
								タグをクリックすると関連する記事を表示します
							</p>
						</div>
					</footer>
				)}
			</article>
		</main>
		<Footer />
	</body>
</html>
