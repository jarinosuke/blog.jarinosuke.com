---
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime.astro";
import { slugifyStr } from "@utils/slugify";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { title, author, description, ogImage, canonicalURL, datetime, modDatetime, tags } = post.data;

const { Content } = await render(post);

const ogImageSrc = ogImage && typeof ogImage === 'string' ? ogImage : `${title}.png`;
const ogUrl = new URL(ogImageSrc, Astro.url.origin).href;
---

<Layout
  title={title}
  author={author}
  description={description}
  ogImage={ogUrl}
  canonicalURL={canonicalURL}
  datetime={datetime}
  modDatetime={modDatetime || undefined}
>
  <Header />
  <div class="mx-auto flex w-full max-w-5xl justify-start px-6">
    <button
      class="focus-outline mb-4 mt-10 flex hover:opacity-75 text-lg"
      onclick="(() => (history.length === 1) ? window.location = '/' : history.back())()"
    >
      <svg xmlns="http://www.w3.org/2000/svg">
        <path
          d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
        ></path>
      </svg><span>Go back</span>
    </button>
  </div>
  <main id="main-content">
    <h1 transition:name={slugifyStr(title)} class="post-title">{title}</h1>
    <Datetime datetime={datetime} size="lg" className="my-2" />
    {modDatetime && modDatetime > datetime && (
      <div class="last-updated-on">
        Last updated:
        <Datetime datetime={modDatetime} size="lg" className="my-2" />
      </div>
    )}
    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>

    {
      tags && (
        <ul class="tags-container">
          {tags.map(tag => <Tag name={slugifyStr(tag)} />)}
        </ul>
      )
    }
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-5xl px-6 pb-12;
  }
  .post-title {
    @apply text-3xl font-bold text-skin-accent sm:text-4xl;
  }
  .last-updated-on {
    @apply italic text-skin-base opacity-80;
  }
  .tags-container {
    @apply my-8 flex flex-wrap gap-x-2 gap-y-1;
  }
  
  /* Enhanced prose styles for blog posts */
  .prose {
    @apply prose-headings:!mb-3 prose-headings:!text-skin-base 
    prose-headings:!font-medium prose-h3:italic prose-p:!text-skin-base 
    prose-a:!text-skin-accent prose-a:!decoration-dashed prose-a:underline-offset-8
    hover:prose-a:text-skin-accent prose-blockquote:!border-l-skin-accent
    prose-blockquote:border-opacity-50 prose-blockquote:opacity-80
    prose-figcaption:!text-skin-base prose-figcaption:opacity-70
    prose-strong:!text-skin-base prose-code:rounded prose-code:bg-skin-card 
    prose-code:bg-opacity-75 prose-code:p-1 prose-code:before:!content-none
    prose-code:after:!content-none prose-ol:!text-skin-base 
    prose-ul:overflow-x-clip prose-ul:!text-skin-base prose-li:marker:!text-skin-accent
    prose-table:text-skin-base prose-th:border prose-th:border-skin-line 
    prose-td:border prose-td:border-skin-line prose-img:!my-2 
    prose-img:mx-auto prose-img:border-2 prose-img:border-skin-line 
    prose-hr:!border-skin-line;
  }
</style>