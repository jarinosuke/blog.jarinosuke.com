---
import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  // すべてのタグを収集
  const allTags = new Set();
  posts.forEach((post) => {
    if (post.data.tags) {
      post.data.tags.forEach((tag) => {
        allTags.add(tag);
      });
    }
  });

  // 各タグに対してパスを生成
  return Array.from(allTags).map((tag) => {
    const tagPosts = posts.filter((post) => 
      post.data.tags && post.data.tags.includes(tag)
    ).sort((a, b) => 
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
    );

    return {
      params: { tag },
      props: { tag, posts: tagPosts },
    };
  });
}

const { tag, posts } = Astro.props;
---

<!doctype html>
<html lang="ja">
	<head>
		<BaseHead title={`Tag: ${tag} - ${SITE_TITLE}`} description={`${tag}タグの記事一覧`} />
	</head>
	<body>
		<Header />
		<main class="mx-auto max-w-3xl px-4">
			<section class="mb-16">
				<div class="flex items-center gap-4 mb-4">
					<a 
						href="/tags" 
						class="text-skin-base/60 hover:text-skin-accent transition-colors text-sm"
					>
						← All Tags
					</a>
				</div>
				<h1 class="text-4xl font-bold text-skin-base mb-4">
					Tag: <span class="text-skin-accent">{tag}</span>
				</h1>
				<p class="text-xl text-skin-base/80 leading-relaxed">
					{posts.length}件の記事
				</p>
			</section>
			
			<section>
				{posts.length > 0 ? (
					<ul class="space-y-12">
						{posts.map((post) => (
							<li>
								<article class="group">
									<h2 class="text-2xl font-semibold mb-3 leading-tight">
										<a 
											href={`/blog/${post.id}/`} 
											class="text-skin-base hover:text-skin-accent transition-colors group-hover:text-skin-accent"
										>
											{post.data.title}
										</a>
									</h2>
									
									<div class="flex items-center gap-3 text-sm text-skin-base/60 mb-4">
										<FormattedDate date={post.data.pubDate} />
										<span>•</span>
										<span>5 min read</span>
									</div>
									
									<p class="text-skin-base/80 leading-relaxed mb-4 text-lg">
										{post.data.description}
									</p>
									
									{post.data.tags && post.data.tags.length > 0 && (
										<div class="flex flex-wrap gap-2">
											{post.data.tags.slice(0, 3).map((postTag) => (
												<a 
													href={`/tags/${postTag}/`}
													class={`text-xs px-2 py-1 rounded-full transition-colors ${
														postTag === tag 
															? 'text-skin-accent bg-skin-accent/10 border border-skin-accent/20' 
															: 'text-skin-base/60 bg-skin-card/50 hover:bg-skin-card'
													}`}
												>
													{postTag}
												</a>
											))}
										</div>
									)}
								</article>
							</li>
						))}
					</ul>
				) : (
					<div class="text-center py-12">
						<p class="text-skin-base/60">このタグの記事が見つかりませんでした。</p>
					</div>
				)}
			</section>
		</main>
		<Footer />
	</body>
</html>