---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card.astro";
import { SITE } from "@config";
import getSortedPosts from "@utils/getSortedPosts";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");
const sortedPosts = getSortedPosts(posts);
---

<Layout title={`Search | ${SITE.title}`}>
  <Header />
  <main id="main-content">
    <section id="hero">
      <h1>Search</h1>
      <p>
        ブログ記事を検索できます。キーワードを入力してください。
      </p>
    </section>

    <Hr />

    <section id="search-container">
      <div id="pagefind__search"></div>
    </section>

    <section id="search-fallback" aria-label="検索結果">
      <h2>検索結果が見つかりませんでした</h2>
      <p>
        検索キーワードに一致するページが見つかりませんでした。キーワードを変更してお試しください。
      </p>
    </section>

    <section id="no-search" aria-label="最近の投稿">
      <h2>最近の投稿</h2>
      <ul>
        {
          sortedPosts.slice(0, 5).map(({ data, id }) => (
            <Card
              href={`/blog/${id}/`}
              frontmatter={data}
              secHeading={false}
            />
          ))
        }
      </ul>
    </section>
  </main>
  <Footer />

  <script is:inline>
    // @ts-nocheck
    // Pagefind will be loaded after build process
    if (typeof window !== 'undefined') {
      window.addEventListener('DOMContentLoaded', async () => {
        try {
          // Wait a bit for the page to fully load
          await new Promise(resolve => setTimeout(resolve, 100));
          
          // Try to load Pagefind dynamically
          const script = document.createElement('script');
          script.src = '/pagefind/pagefind-ui.js';
          script.onload = () => {
            try {
              new PagefindUI({
                element: "#pagefind__search",
                resetStyles: false,
                showImages: false,
                excerptLength: 15,
                translations: {
                  placeholder: "ブログを検索...",
                  clear_search: "検索をクリア",
                  load_more: "さらに読み込む",
                  search_label: "ブログ検索",
                  filters_label: "フィルター",
                  zero_results: "検索結果が見つかりませんでした",
                  many_results: "[SEARCH_TERM] に対して [COUNT] 件の結果",
                  one_result: "[SEARCH_TERM] に対して [COUNT] 件の結果",
                  alt_search: "[SEARCH_TERM] を検索",
                  search_suggestion: "次を試してください: [SEARCH_TERM]",
                  searching: "検索中..."
                }
              });
              
              // Hide fallback content
              document.getElementById("search-fallback").style.display = 'none';
              document.getElementById("no-search").style.display = 'none';
            } catch (error) {
              console.error("Pagefind UI initialization failed:", error);
              showFallback();
            }
          };
          script.onerror = () => {
            console.warn("Pagefind not available, showing fallback");
            showFallback();
          };
          document.head.appendChild(script);
        } catch (error) {
          console.error("Failed to load Pagefind:", error);
          showFallback();
        }
        
        function showFallback() {
          document.getElementById("search-container").style.display = 'none';
          document.getElementById("search-fallback").style.display = 'block';
          document.getElementById("no-search").style.display = 'block';
        }
      });
    }
  </script>

  <style>
    #pagefind__search {
      margin: 2rem 0;
    }
    
    .pagefind-ui__search-input {
      background-color: rgb(var(--color-card));
      border: 1px solid rgb(var(--color-border));
      border-radius: 0.5rem;
      color: rgb(var(--color-text-base));
      font-size: 1rem;
      padding: 0.75rem 1rem;
      width: 100%;
    }
    
    .pagefind-ui__search-input:focus {
      border-color: rgb(var(--color-accent));
      outline: none;
      box-shadow: 0 0 0 2px rgb(var(--color-accent) / 0.2);
    }
    
    .pagefind-ui__result {
      border: 1px solid rgb(var(--color-border));
      border-radius: 0.5rem;
      margin: 1rem 0;
      padding: 1rem;
      background-color: rgb(var(--color-card));
    }
    
    .pagefind-ui__result-title {
      color: rgb(var(--color-accent));
      font-weight: 600;
      margin-bottom: 0.5rem;
    }
    
    .pagefind-ui__result-excerpt {
      color: rgb(var(--color-text-base));
      line-height: 1.6;
    }
    
    .pagefind-ui__button {
      background-color: rgb(var(--color-accent));
      border: none;
      border-radius: 0.375rem;
      color: white;
      cursor: pointer;
      font-weight: 500;
      padding: 0.5rem 1rem;
      transition: all 0.2s;
    }
    
    .pagefind-ui__button:hover {
      background-color: rgb(var(--color-accent) / 0.8);
    }
    
    #search-fallback {
      display: none;
      text-align: center;
      padding: 2rem;
    }
    
    #no-search ul {
      list-style: none;
      padding: 0;
    }
  </style>
</Layout>